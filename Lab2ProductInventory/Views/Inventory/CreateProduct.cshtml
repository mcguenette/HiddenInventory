@model Lab2ProductInventory.Models.Product

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="author" content="MC Guenette">
    <meta name="description"
          content="MC Guenette: Software Developer Portfolio">
    <meta name="keywords"
          content="web developer, web, front-end, css, javascript, html, react">
    <link rel="shortcut icon"
          href="https://res.cloudinary.com/dzdgpwtox/image/upload/v1656263678/designer-tool-uploads/bucket_9200/1656263676160.png"
          type="image/x-icon">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Exo:wght@500;600&family=Poppins:wght@400;800&display=swap" rel="stylesheet">
    <link href="~/Content/Style.css" rel="stylesheet" />
    <script src="https://kit.fontawesome.com/20608a4ccb.js" crossorigin="anonymous"></script>
    <title>Create Product</title>
</head>
<body>
    <main>
        <div class="container">
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()
                <section>
                    <div class="form-horizontal">
                        <h2>Add a new Product</h2>
                    </div>
                </section>

                <section>
                    <div class="form-content">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="form-group">
                            @Html.LabelFor(model => model.ProductName, "Product Name", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.ProductName, new { htmlAttributes = new { @class = "form-control" } })
                                @if (!ViewData.ModelState.IsValidField("ProductName"))
                                {
                                    <span class="text-danger">@Html.ValidationMessageFor(model => model.ProductName)</span>
                                }
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.ProductDescription, "Product Description", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.TextAreaFor(model => model.ProductDescription, new { @class = "form-control", rows = 3 })
                                @if (!ViewData.ModelState.IsValidField("ProductDescription"))
                                {
                                    <span class="text-danger">@Html.ValidationMessageFor(model => model.ProductDescription)</span>
                                }
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.ProductPrice, "Product Price", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.ProductPrice, new { htmlAttributes = new { @class = "form-control" } })
                                @if (!ViewData.ModelState.IsValidField("ProductPrice"))
                                {
                                    <span class="text-danger">@Html.ValidationMessageFor(model => model.ProductPrice)</span>
                                }
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.Label("Stock Quantity", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                <input type="number" class="form-control" name="StockQuantity" />
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <button type="submit" class="btn btn-default primary-btn">Create</button>
                                <button type="button" class="btn secondary-btn" onclick="window.location.href='@Url.Action("Index", "Inventory")'">Back to List</button>
                            </div>
                        </div>
                    </div>
                </section>
            }
        </div>
    </main>
</body>

</html>
